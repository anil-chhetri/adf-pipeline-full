{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "interview-fb-dev"
		},
		"LS_DataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_DataLake'"
		},
		"LS_DataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datastoresfd.dfs.core.windows.net/"
		},
		"LS_webdata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/region/europe"
		},
		"default_properties_Environment_value": {
			"type": "string",
			"defaultValue": "dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Get Country Codes of EU Countries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Getting data from web to Data Lake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set ConatinerName Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['name']['official']"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['cca3']"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_webData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_datalake",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": {
										"value": "@variables('var_containerName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "set ConatinerName Variable",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_containerName",
							"value": {
								"value": "@pipeline().globalParameters.Environment",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create Bronze Layer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Getting data from web to Data Lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "InputData To Bronze Layer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"var_containerName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T11:24:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_webData')]",
				"[concat(variables('factoryId'), '/datasets/DS_datalake')]",
				"[concat(variables('factoryId'), '/pipelines/InputData To Bronze Layer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputData To Bronze Layer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get childItems",
						"description": "Get all the children items of the folder pointed by Dataset.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_inputLayer",
								"type": "DatasetReference",
								"parameters": {
									"FileName": " ",
									"ContainerName": {
										"value": "@pipeline().globalParameters.Environment",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemType",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Loop through all the files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Remove folder from the list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Remove folder from the list').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Input to Bronze Layer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "record_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "record_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "transaction_date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "transaction_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "posting_date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "posting_date",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "transaction_amount",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "transaction_amount",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Txn_Description",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Txn_Description",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "country",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "country",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Age_Band",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Age_Band",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "gender",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "gender",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Transaction_id",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Transaction_id",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customer_key",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "customer_key",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "customer_postcode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "customer_postcode",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Notes",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Notes",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_inputLayer",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"ContainerName": {
													"value": "@pipeline().globalParameters.Environment",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BronzeLayer",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "@pipeline().globalParameters.Environment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"description": "Delete the existing Input Layer after copying the data to Bronze layer.",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Input to Bronze Layer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_inputLayer",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"ContainerName": {
													"value": "@pipeline().globalParameters.Environment",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Remove folder from the list",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get childItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get childItems').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T12:10:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_inputLayer')]",
				"[concat(variables('factoryId'), '/datasets/DS_BronzeLayer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver Layer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BronzeLayer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze",
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EuropeCountry.csv",
						"folderPath": "Europe",
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_inputLayer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_webData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_webdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_webdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_DataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_DataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_webdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_webdata_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/webRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"Environment": {
					"type": "string",
					"value": "[parameters('default_properties_Environment_value')]"
				}
			},
			"dependsOn": []
		}
	]
}