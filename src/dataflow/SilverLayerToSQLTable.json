{
	"name": "SilverLayerToSQLTable",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LS_delta_table",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Azuresqltable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     ContainerName as string (\"uat\")",
				"}",
				"source(output(",
				"          File_date as date,",
				"          record_id as string,",
				"          customer_type as string,",
				"          transaction_date as date,",
				"          posting_date as date,",
				"          transaction_amount as string,",
				"          Description_text as string,",
				"          original_description_text as string,",
				"          country_code as string,",
				"          EU_flag as integer,",
				"          age_band as string,",
				"          gender_code as string,",
				"          transaction_id as string,",
				"          customer_key as string,",
				"          post_code as string,",
				"          note_text as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'uat',",
				"     folderPath: 'Silver') ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     batchSize: 5000,",
				"     preSQLs:['drop table if exists dbo.inputTestData\\ncreate table dbo.inputTestData\\n(\\n     file_date date\\n     , record_id nvarchar(100)\\n     , customer_type nvarchar(100)\\n     , transaction_date date\\n     , posting_date date\\n     , transaction_amount nvarchar(100)\\n     , description_text nvarchar(100)\\n     , original_description_text nvarchar(100)\\n     , country_code nvarchar(4)\\n     , EU_flag int\\n     , age_band nvarchar(10)\\n     , gender_code nvarchar(1)\\n     , transaction_id nvarchar(50)\\n     , customer_key nvarchar(50)\\n     , post_code nvarchar(10)\\n     , note_text nvarchar(50)\\n)'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}